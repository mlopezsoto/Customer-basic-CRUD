openapi: 3.0.1
info:
  title: Customer Services
  description: 'CRUD Customer Services'
  version: 1.0.0
servers:
  - url: https://localhost:8080
  - url: http://localhost:8080
tags:
  - name: customer
    description: Customers CRUD
paths:
  /customer:
    put:
      summary: Update an existing customer
      operationId: updateCustomer
      requestBody:
        description: Customer object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Update succesful
          content: {}
        405:
          description: Invalid input
          content: {}
    post:
      summary: Add a new customer
      operationId: addCustomer
      requestBody:
        description: Customer object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        201:
          description: Create succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        405:
          description: Invalid input
          content: {}
  /customer/{customerId}:
    get:
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Customer info is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        405:
          description: Invalid Input
          content: {}
        404:
          description: Customer not found
          content: {}
    delete:
      summary: Deletes a customer
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          description: Customer id to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Operation successful
          content: {}
        405:
          description: Invalid Input
          content: { }
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email

